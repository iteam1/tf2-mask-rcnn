# setup docker
docker run --gpus all --shm-size=30g --name mytf1 -it -v $PWD:/home/od tensorflow/tensorflow:1.14.0-gpu-py3 /bin/bash

docker exec -it mytf1 /bin/bash

# install tensorflow-
pip install --upgrade pip setuptools wheel

git clone https://github.com/tensorflow/models.git

docker exec -it <your_container> bin/bash

apt install protobuf-compiler

cd models/research

# Compile protos.
protoc object_detection/protos/*.proto --python_out=.

# Install TensorFlow Object Detection API.
cp object_detection/packages/tf2/setup.py .
python -m pip install .

cp object_detection/packages/tf1/setup.py .
python -m pip install .
pip install keras==2.1.6

File "/usr/local/lib/python3.6/dist-packages/object_detection/models/keras_models/resnet_v1.py", line 21, in <module>
    from keras.applications import resnet
ImportError: cannot import name 'resnet'

# download pretrained model tensorflow2
cd object-detection/pretrained_models
wget http://download.tensorflow.org/models/object_detection/mask_rcnn_inception_v2_coco_2018_01_28.tar.gz
tar -xf mask_rcnn_inception_v2_coco_2018_01_28.tar.gz

wget http://download.tensorflow.org/models/object_detection/mask_rcnn_inception_v2_coco_2018_01_28.tar.gz

	# Test the installation (custom)
python3 object_detection/builders/model_builder_tf2_test.py
python object_detection/builders/model_builder_tf1_test.py

# convert labelme3.0 to coco
python3 labelme3_labelme.py dataset/model2_train
python3 labelme3_labelme.py dataset/model1_val

*Note: Outside the docker

python3 labelme2coco.py dst \
--output dataset/train_model2/train.json

python3 labelme2coco.py dataset/val_model1 \
--output dataset/val_model1/val.json

# export tfrecord
python create_coco_tf_record.py --logtostderr \
--train_image_dir=dataset/train_model2/images \
--test_image_dir=dataset/val_model2/images \
--train_annotations_file=dataset/train_model2/train.json \
--test_annotations_file=dataset/val_model2/val.json \
--output_dir=dataset

# train model
CUDA_VISIBLE_DEVICES=0 python3 models/research/object_detection/model_main_tf2.py --logtostderr --model_dir=training/ --pipeline_config_path=pipeline.config

CUDA_VISIBLE_DEVICES=1 python models/research/object_detection/model_main.py --logtostderr --model_dir=training/ --pipeline_config_path=mask_rcnn_inception_v2_coco.config

# export model

CUDA_VISIBLE_DEVICES=1 python3 models/research/object_detection/exporter_main_v2.py \
    --trained_checkpoint_dir training \
    --output_directory inference_graph \
    --pipeline_config_path pipeline.config

CUDA_VISIBLE_DEVICES=1 python models/research/object_detection/export_inference_graph.py \
--input_type image_tensor \
--pipeline_config_path mask_rcnn_inception_v2_coco.config \
--trained_checkpoint_prefix checkpoints/model.ckpt-163085 --output_directory inference_graph